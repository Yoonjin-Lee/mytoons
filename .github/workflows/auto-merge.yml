name: Auto Merge Dependabot PRs

on:
  pull_request:
    branches:
      - main # main 브랜치에 대한 PR 이벤트
    types:
      - opened
      - synchronize
      - reopened

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    steps:
      # 1. PR 작성자가 Dependabot인지 확인
      - name: Check if Dependabot
        id: dependabot-check
        run: |
          if [[ "${{ github.actor }}" != "dependabot[bot]" ]]; then
            echo "This is not a Dependabot PR. Skipping."
            exit 1
          fi

      # 2. CI 상태 확인
      - name: Ensure CI Checks Passed
        id: ci-status
        uses: actions/github-script@v6
        with:
          script: |
            const { data: checkRuns } = await github.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha,
            });

            const allChecksPassed = checkRuns.check_runs.every(
              (check) => check.conclusion === 'success'
            );

            if (!allChecksPassed) {
              throw new Error('CI checks did not pass.');
            }

      # 3. PR 자동 승인 (필요한 경우)
      - name: Approve Pull Request
        uses: hmarr/auto-approve-action@v3
        if: steps.dependabot-check.outcome == 'success'

      # 4. PR 병합
      - name: Merge Pull Request
        uses: actions/github-script@v6
        if: steps.dependabot-check.outcome == 'success' && steps.ci-status.outcome == 'success'
        with:
          script: |
            github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              merge_method: 'squash', // merge, squash, rebase 중 선택
            });
